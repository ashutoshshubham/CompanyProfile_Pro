{"ast":null,"code":"var _jsxFileName = \"D:\\\\Assignment\\\\CompanyProfile_Pro\\\\frontend\\\\src\\\\components\\\\main\\\\Update_Pro.jsx\",\n  _s = $RefreshSig$();\nimport { Formik } from 'formik';\nimport React, { useEffect, useState } from 'react';\nimport { toast } from 'react-hot-toast';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Update_Pro = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  // console.log(id);\n  const [ProfileData, setProfileData] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const navigate = useNavigate();\n  const getProfileByid = async () => {\n    setLoading(true);\n    const res = await fetch('http://localhost:5000/profile/getbyid/' + id);\n    console.log(res.status);\n    if (res.status === 200) {\n      const data = await res.json();\n      console.log(data);\n      setProfileData(data);\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    getProfileByid();\n  }, []);\n  const updated_profile_Submit = async formdata => {\n    console.log(formdata);\n    const res = await fetch('http://localhost:5000/profile/update/' + id, {\n      method: 'PUT',\n      body: JSON.stringify(formdata),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    console.log(res.status);\n    if (res.status === 200) {\n      toast.success('User Updated Successfully');\n      // navigate('/manageuser')\n    }\n  };\n\n  const showUpdateForm = () => {\n    if (!loading && ProfileData) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card mt-5\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-body\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"text-center\",\n            children: \"Signup\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Formik, {\n            initialValues: ProfileData,\n            onSubmit: updated_profile_Submit,\n            children: _ref => {\n              let {\n                values,\n                handleChange,\n                handleSubmit\n              } = _ref;\n              return /*#__PURE__*/_jsxDEV(\"form\", {\n                onSubmit: handleSubmit\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 37\n              }, this);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: showUpdateForm()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 9\n  }, this);\n};\n_s(Update_Pro, \"Q8CQs2AsrHg1kirNdOJR7UVTrqo=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = Update_Pro;\nexport default Update_Pro;\nvar _c;\n$RefreshReg$(_c, \"Update_Pro\");","map":{"version":3,"names":["Formik","React","useEffect","useState","toast","useNavigate","useParams","jsxDEV","_jsxDEV","Update_Pro","_s","id","ProfileData","setProfileData","loading","setLoading","navigate","getProfileByid","res","fetch","console","log","status","data","json","updated_profile_Submit","formdata","method","body","JSON","stringify","headers","success","showUpdateForm","className","children","fileName","_jsxFileName","lineNumber","columnNumber","initialValues","onSubmit","_ref","values","handleChange","handleSubmit","_c","$RefreshReg$"],"sources":["D:/Assignment/CompanyProfile_Pro/frontend/src/components/main/Update_Pro.jsx"],"sourcesContent":["import { Formik } from 'formik';\r\nimport React, { useEffect, useState } from 'react'\r\nimport { toast } from 'react-hot-toast';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\n\r\nconst Update_Pro = () => {\r\n\r\n    const { id } = useParams();\r\n    // console.log(id);\r\n    const [ProfileData, setProfileData] = useState(null)\r\n    const [loading, setLoading] = useState(false)\r\n    const navigate = useNavigate();\r\n\r\n    const getProfileByid = async () => {\r\n        setLoading(true);\r\n        const res = await fetch('http://localhost:5000/profile/getbyid/' + id);\r\n        console.log(res.status);\r\n\r\n        if (res.status === 200) {\r\n            const data = await res.json();\r\n            console.log(data);\r\n            setProfileData(data);\r\n            setLoading(false);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        getProfileByid();\r\n    }, []);\r\n\r\n    const updated_profile_Submit = async (formdata) => {\r\n        console.log(formdata)\r\n\r\n        const res = await fetch('http://localhost:5000/profile/update/' + id, {\r\n            method: 'PUT',\r\n            body: JSON.stringify(formdata),\r\n            headers: { \"Content-Type\": \"application/json\" },\r\n        })\r\n\r\n        console.log(res.status);\r\n        if (res.status === 200) {\r\n            toast.success('User Updated Successfully');\r\n            // navigate('/manageuser')\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    const showUpdateForm = () => {\r\n        if (!loading && ProfileData) {\r\n            return (\r\n                <div className='card mt-5'>\r\n                    <div className=\"card-body\">\r\n                        <h1 className=\"text-center\">Signup</h1>\r\n\r\n                        <Formik\r\n                            initialValues={ProfileData}\r\n                            onSubmit={updated_profile_Submit} >\r\n\r\n                            {\r\n                                ({ values, handleChange, handleSubmit }) => (\r\n                                    <form onSubmit={handleSubmit}>\r\n                                        \r\n                                    </form>\r\n                                )\r\n                            }\r\n                        </Formik>\r\n\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n\r\n            <div className=\"container\">\r\n                {showUpdateForm()}\r\n            </div>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Update_Pro"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}